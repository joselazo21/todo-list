#!/bin/bash

# Colores para el output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color
BOLD='\033[1m'

# Funci√≥n para mostrar el banner
show_banner() {
    echo -e "${GREEN}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë               üöÄ TODO LIST APPLICATION üöÄ                   ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë                   ¬°Aplicaci√≥n Lista!                        ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïêÔøΩÔøΩÔøΩ‚ïê‚ïê‚ïêÔøΩÔøΩÔøΩ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
}

# Funci√≥n para mostrar los enlaces
show_links() {
    echo -e "${BOLD}${BLUE}üì± ENLACES DE ACCESO:${NC}"
    echo ""
    echo -e "${GREEN}üåê Aplicaci√≥n Principal:${NC}"
    echo -e "   ${YELLOW}‚ûú${NC} http://localhost:8080"
    echo ""
    echo -e "${GREEN}üîß Servicios Individuales:${NC}"
    echo -e "   ${YELLOW}‚ûú${NC} Frontend (React):     http://localhost:5173"
    echo -e "   ${YELLOW}‚ûú${NC} Backend API:          http://localhost:8080/api/"
    echo -e "   ${YELLOW}‚ûú${NC} Admin Django:         http://localhost:8080/admin/"
    echo -e "   ${YELLOW}‚ûú${NC} API Documentation:    http://localhost:8080/api/schema/swagger-ui/"
    echo ""
    echo -e "${GREEN}üóÑÔ∏è  Base de Datos:${NC}"
    echo -e "   ${YELLOW}‚ûú${NC} PostgreSQL:           localhost:5432"
    echo -e "   ${YELLOW}‚ûú${NC} Database: todo_database"
    echo -e "   ${YELLOW}‚ûú${NC} User: postgres"
    echo ""
}

# Funci√≥n para mostrar comandos √∫tiles
show_commands() {
    echo -e "${BOLD}${BLUE}‚ö° COMANDOS √öTILES:${NC}"
    echo ""
    echo -e "${GREEN}üìä Ver estado de contenedores:${NC}"
    echo -e "   ${YELLOW}docker compose ps${NC}"
    echo ""
    echo -e "${GREEN}üìã Ver logs:${NC}"
    echo -e "   ${YELLOW}docker compose logs -f${NC}"
    echo ""
    echo -e "${GREEN}üõë Detener aplicaci√≥n:${NC}"
    echo -e "   ${YELLOW}docker compose down${NC}"
    echo ""
    echo -e "${GREEN}üîÑ Reiniciar desde cero:${NC}"
    echo -e "   ${YELLOW}docker compose down -v && docker compose up --build${NC}"
    echo ""
}

# Funci√≥n para verificar que los servicios est√©n funcionando
check_services() {
    echo -e "${BOLD}${BLUE}üîç VERIFICANDO SERVICIOS...${NC}"
    echo ""
    
    # Verificar frontend
    if curl -s http://localhost:8080 > /dev/null 2>&1; then
        echo -e "   ${GREEN}‚úÖ Frontend: Funcionando${NC}"
    else
        echo -e "   ${RED}‚ùå Frontend: No disponible${NC}"
    fi
    
    # Verificar backend API
    if curl -s http://localhost:8080/api/ > /dev/null 2>&1; then
        echo -e "   ${GREEN}‚úÖ Backend API: Funcionando${NC}"
    else
        echo -e "   ${RED}‚ùå Backend API: No disponible${NC}"
    fi
    
    # Verificar base de datos (usando docker compose ps)
    if docker compose ps db | grep -q "healthy\|Up"; then
        echo -e "   ${GREEN}‚úÖ Base de Datos: Funcionando${NC}"
    else
        echo -e "   ${RED}‚ùå Base de Datos: No disponible${NC}"
    fi
    
    echo ""
}

# Funci√≥n principal
main() {
    clear
    show_banner
    echo ""
    check_services
    show_links
    show_commands
    
    echo -e "${BOLD}${GREEN}üéâ ¬°La aplicaci√≥n est√° lista para usar!${NC}"
    echo -e "${BOLD}${BLUE}üí° Abre tu navegador en: ${YELLOW}http://localhost:8080${NC}"
    echo ""
    echo -e "${YELLOW}Presiona Ctrl+C para detener los servicios${NC}"
    echo ""
}

# Ejecutar funci√≥n principal
main