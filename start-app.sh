n#!/bin/bash

# Colores para el output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color
BOLD='\033[1m'

# Funci√≥n para mostrar el banner inicial
show_initial_banner() {
    clear
    echo -e "${GREEN}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë               üöÄ TODO LIST APPLICATION üöÄ                   ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë                 Iniciando aplicaci√≥n...                     ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
    echo ""
}

# Funci√≥n para mostrar el banner final
show_final_banner() {
    echo ""
    echo -e "${GREEN}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë               ‚úÖ ¬°APLICACI√ìN LISTA! ‚úÖ                      ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
    echo ""
}

# Funci√≥n para verificar servicios
check_services() {
    echo -e "${BOLD}${BLUE}üîç VERIFICANDO SERVICIOS...${NC}"
    echo ""
    
    # Verificar frontend
    if curl -s http://localhost:8080 > /dev/null 2>&1; then
        echo -e "   ${GREEN}‚úÖ Frontend: Funcionando${NC}"
    else
        echo -e "   ${YELLOW}‚è≥ Frontend: Iniciando...${NC}"
    fi
    
    # Verificar backend API
    if curl -s http://localhost:8080/api/ > /dev/null 2>&1; then
        echo -e "   ${GREEN}‚úÖ Backend API: Funcionando${NC}"
    else
        echo -e "   ${YELLOW}‚è≥ Backend API: Iniciando...${NC}"
    fi
    
    echo ""
}

# Funci√≥n para mostrar los enlaces
show_links() {
    echo -e "${BOLD}${BLUE}üì± ENLACES DE ACCESO:${NC}"
    echo ""
    echo -e "${GREEN}üåê Aplicaci√≥n Principal:${NC}"
    echo -e "   ${YELLOW}‚ûú${NC} http://localhost:8080"
    echo ""
    echo -e "${GREEN}üîß Servicios Individuales:${NC}"
    echo -e "   ${YELLOW}‚ûú${NC} Frontend (React):     http://localhost:5173"
    echo -e "   ${YELLOW}‚ûú${NC} Backend API:          http://localhost:8080/api/"
    echo -e "   ${YELLOW}‚ûú${NC} Admin Django:         http://localhost:8080/admin/"
    echo -e "   ${YELLOW}‚ûú${NC} API Documentation:    http://localhost:8080/api/schema/swagger-ui/"
    echo ""
    echo -e "${GREEN}üóÑÔ∏è  Base de Datos:${NC}"
    echo -e "   ${YELLOW}‚ûú${NC} PostgreSQL:           localhost:5432"
    echo -e "   ${YELLOW}‚ûú${NC} Database: todo_database"
    echo -e "   ${YELLOW}‚ûú${NC} User: postgres"
    echo ""
}

# Funci√≥n para mostrar comandos √∫tiles
show_commands() {
    echo -e "${BOLD}${BLUE}‚ö° COMANDOS √öTILES:${NC}"
    echo ""
    echo -e "${GREEN}üìä Ver estado:${NC}           ${YELLOW}docker compose ps${NC}"
    echo -e "${GREEN}üìã Ver logs:${NC}             ${YELLOW}docker compose logs -f${NC}"
    echo -e "${GREEN}üõë Detener:${NC}              ${YELLOW}docker compose down${NC}"
    echo -e "${GREEN}üîÑ Reiniciar:${NC}            ${YELLOW}docker compose down -v && docker compose up --build${NC}"
    echo ""
}

# Funci√≥n para abrir navegador
open_browser() {
    echo -e "${YELLOW}üåê Abriendo navegador...${NC}"
    if command -v xdg-open > /dev/null; then
        xdg-open http://localhost:8080
    elif command -v open > /dev/null; then
        open http://localhost:8080
    else
        echo -e "${YELLOW}No se pudo abrir el navegador autom√°ticamente${NC}"
    fi
}

# Funci√≥n principal
main() {
    show_initial_banner
    
    echo -e "${BLUE}üì¶ Levantando contenedores...${NC}"
    docker compose up --build -d
    
    echo ""
    echo -e "${YELLOW}‚è≥ Esperando que los servicios se inicialicen...${NC}"
    sleep 10
    
    show_final_banner
    check_services
    show_links
    show_commands
    
    echo -e "${BOLD}${GREEN}üéâ ¬°Abre tu navegador en: ${YELLOW}http://localhost:8080${NC}"
    echo ""
    
    # Preguntar si quiere abrir el navegador
    read -p "$(echo -e ${YELLOW}¬øQuieres abrir el navegador autom√°ticamente? [y/N]: ${NC})" -n 1 -r
    echo ""
    if [[ $REPLY =~ ^[YySs]$ ]]; then
        open_browser
    fi
    
    echo ""
    echo -e "${BOLD}${GREEN}‚ú® ¬°Disfruta usando la aplicaci√≥n!${NC}"
    echo ""
    echo -e "${YELLOW}Para detener la aplicaci√≥n, ejecuta: ${BOLD}docker compose down${NC}"
    echo ""
}

# Ejecutar funci√≥n principal
main